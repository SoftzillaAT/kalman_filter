#! /usr/bin/env python

PACKAGE='tuw_self_localization'
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

pf_init_enum = gen.enum([ gen.const("Normal",         int_t, 0, "normal distribution around pose"),
                       gen.const("Uniform",        int_t, 1, "uniform distribution on map"),
                       gen.const("Grid",           int_t, 2, "grid on mapt")],
                       "PF initialization mode")

pf_resample_enum = gen.enum([ gen.const("Simple", int_t, 0, "simple resamplinge by cloning bad to good samples"),
                              gen.const("Low_variance", int_t, 1, "low variance resampling")],
                              "PF resample method")

gen.add("initial_distribution", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 2, edit_method=pf_init_enum)
gen.add("resample_method", int_t, 0, "A size parameter which is edited via an enum", 0 ,0, 1, edit_method=pf_resample_enum)
gen.add("forward_prediction_time", double_t, 0, "forward_prediction_time", 0, 0, 10)
gen.add("nr_of_samples", int_t, 0, "number of samples", 100, 0, 100000)
gen.add("enable_update", bool_t,   0, "enables update step",  False)
gen.add("enable_weighting", bool_t,   0, "enables weighting step",  False)
gen.add("enable_resample", bool_t,   0, "enables resample step",  False)
gen.add("resample_rate", double_t, 0, "number of samples", 0.1, 0, 1)
gen.add("nr_of_beams", int_t, 0, "rays to skip on measurement", 20, 0, 300)
gen.add("random_beams", bool_t,   0, "select random beams",  False)
gen.add("num_threads", int_t, 0, "Number of Threads", 4, 1, 8); 

gen.add("sigma_init_position", double_t, 0, "init noise position", 0.5, 0, 10)
gen.add("sigma_init_orientation", double_t, 0, "init noise position", 0.39, 0, 3.14)
gen.add("sigma_static_position", double_t, 0, "static noise position", 0.1, 0, 1)
gen.add("sigma_static_orientation", double_t, 0, "static noise position", 0.2, 0, 3.14)

gen.add("alpha1", double_t, 0, "motion_noise 1", 0.1, 0, 5)
gen.add("alpha2", double_t, 0, "motion_noise 2", 0.1, 0, 5)
gen.add("alpha3", double_t, 0, "motion_noise 3", 0.1, 0, 5)
gen.add("alpha4", double_t, 0, "motion_noise 4", 0.1, 0, 5)
gen.add("alpha5", double_t, 0, "motion_noise 5", 0.1, 0, 5)
gen.add("alpha6", double_t, 0, "motion_noise 6", 0.1, 0, 5)

gen.add("sigma_hit",   double_t, 0, "standard distribution for likelihood field", 0.5, 0, 1)
gen.add("z_hit",   double_t, 0, "z hit", 0.7, 0, 5)
gen.add("z_short", double_t, 0, "z short", 0.1, 0, 5)
gen.add("z_max",   double_t, 0, "z max", 1, 0, 1)
gen.add("z_rand",  double_t, 0, "z rand", 0.4, 0, 1)


exit(gen.generate(PACKAGE, "tuw_self_localization", "ParticleFilter"))
